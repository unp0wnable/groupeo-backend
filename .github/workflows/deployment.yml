# Acción para desplegar código en servidor de despliegues: Heroku
# INFO: https://github.com/marketplace/actions/build-push-and-release-a-docker-container-to-heroku
name: Production deployment.
on:
  # Al pushear a la rama principal del repositorio
  push:
    branches:
      - main
      - release

jobs:
  # Desplegar código a servidor de producción en Heroku mediante contenedor de Docker
  deploy:
    name: Containerize package
    runs-on: ubuntu-latest
    steps:
      # Permisos para manipular repositorio
      - name: Checkout code.
        uses: actions/checkout@v2

      # Configurar JAVA 11 en la máquina de referencia
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Cachear dependencias de Maven
      - name: Cache Maven packages.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}

      # Generar imagen .jar con Maven
      - name: Build project with Maven
        run: mvn -B package --file pom.xml -Pprod

      # Iniciar sesión en registro de contenedores de Heroku
      - name: Heroku Container Registry login
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      # Construir imagen Docker en Heroku
      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web

      # Publicar imagen
      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
